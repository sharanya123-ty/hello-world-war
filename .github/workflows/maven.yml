name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: [self-hosted, staging]

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

 

    - name: Build with Maven
      run: mvn clean install

  uploading_artifact_to_Jfrog:

    runs-on: [self-hosted, staging]
    needs: build
    if: ${{ needs.build.result == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: uploading the artifact
        run: |
          curl -u admin:cmVmdGtuOjAxOjE3Njg1NjIwMjY6SzY0cXpONlFrT3ZkbXB2SnlnNFRlR2pYcWZj -T /home/ubuntu/.m2/repository/com/efsavage/hello-world-war/1.0.33/hello-world-war-1.0.33.war  "http://13.233.63.154:8082/artifactory/hello_world_1-libs-release/com/efsavage/hello-world-war/"

  deploy:

    runs-on: ${{ matrix.environment }}
    needs: uploading_artifact_to_Jfrog # Waits for SonarQube and Artifactory jobs to complete
    strategy:
      matrix:
        environment: [staging, production]  # Deploy to both staging and production environments
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Tomcat (Staging/Production)
        run: |
          #echo "Deploying to ${matrix.environment}..."
          run: |
          echo "Deployoing the script"
          sudo chown -R ubuntu:ubuntu /opt
          cd /opt/apache-tomcat-10.1.34/webapps/
          curl -L -u "admin:cmVmdGtuOjAxOjE3Njg0OTk0NzA6eDk4cDRHTHVTQnFncVJQcjQxWHRYYlg4TmJV" -O "http://13.233.63.154:8082/artifactory/hello_world_1-libs-release/com/efsavage/hello-world-war/hello-world-war-1.0.33.war"

       
